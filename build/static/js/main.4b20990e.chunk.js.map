{"version":3,"sources":["components/LoginForm/LoginForm.js","models/constants.js","actions/index.js","models/user.js","containers/Login/Login.js","components/SignupForm/SignupForm.js","containers/Signup/Signup.js","components/Report/Report.js","containers/Reports/Reports.js","containers/Search/Search.js","containers/Header/Header.js","App.js","serviceWorker.js","reducers/login.js","reducers/index.js","reducers/signup.js","reducers/userLogged.js","index.js"],"names":["LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setValue","event","newValue","previousValue","name","modelState","assign","state","model","setState","handleSubmit","error","isLogged","react_default","a","createElement","className","href","onSubmit","preventDefault","Field","value","email","component","type","placeholder","onChange","password","Link","to","label","Component","reduxForm","form","proxyURL","requestURL","login","storedUsers","JSON","parse","localStorage","getItem","map","user","setItem","payload","signUp","push","stringify","alreadyMember","logout","removeItem","userModel","Login","redirect","nextProps","response","loginSuccess","setUserLoggedEmail","Redirect","components_LoginForm_LoginForm","connect","dispatch","bindActionCreators","SignUpForm","_this$props","isSignUp","style","textAlign","SignUp","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","signUpSuccess","SignupForm","Report","reports","Panel","bsStyle","display","Heading","Title","componentClass","emails","email_address","Body","Tabs","defaultActiveKey","id","Tab","eventKey","title","ListGroup","names","ListGroupItem","key","uuid","v4","full","social","index","textTransform","url","addresses","address","jobs","job","company","usernames","username","Reports","getReportsByUser","userLogged","userReports","sent","storageReport","report","handleClick","show","reportInfo","showModal","_this2","showReport","react_responsive_default","query","Report_Report","uui","Modal","Footer","Button","onClick","App","width","Search","newEmailSearch","setAndSaveReport","reportExists","fullReport","storedReport","searchresponse","loader","constants","Axios","get","concat","data","searchButton","color","fontSize","Header","userLoggedStatus","userLoggedEmail","loginPage","containers_Login_Login","isUserLogged","BrowserRouter","Navbar","fluid","collapseOnSelect","zIndex","Brand","Toggle","Collapse","Nav","lib","NavItem","pullRight","Switch","Route","path","render","from","userLogout","containers_Header_Header","Boolean","window","location","hostname","match","rootReducer","combineReducers","arguments","length","undefined","action","formReducer","createStoreWithMiddleware","applyMiddleware","createStore","ReactDOM","es","store","reducers","src_App_0","Date","now","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b20990e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport '../../styles/client.scss';\nimport { Link } from 'react-router-dom';\n\nclass LoginForm extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      model: props.model\n    };\n  }\n\n  setValue = (event, newValue, previousValue, name) => {\n    let modelState = Object.assign({}, this.state);\n    modelState.model[name] = newValue;\n    this.setState(modelState);\n   };\n\n  render() {\n      const { handleSubmit } = this.props;\n      const model = this.state.model;\n      const error = this.props.isLogged ? null : <center><label className={\"text-center\"}> Unable to authenticate. Try Again</label></center> ;\n\n\n      return (\n        <div className={\"login-form\"}>\n            <form href=\"#\" onSubmit={ (event)=> {event.preventDefault(); handleSubmit();}}>\n            <h2 className={\"text-center\"}> Login</h2>\n            <hr/>\n              <Field\n                className={\"form-control\"}\n                value= {model.email}\n                name=\"email\"\n                component=\"input\"\n                type=\"text\"\n                placeholder=\"Username\"\n                onChange={this.setValue}\n              />\n              <Field\n                className={\"form-control\"}\n                value= {model.password}\n                name=\"password\"\n                component=\"input\"\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={this.setValue}\n              />\n              {error}\n              <div>\n                  <p className={\"text-center\"}>Not a Member? <Link to={'/sign-up'}>Sign Up.</Link></p>\n              </div>\n              <div>\n                <button className={\"buttonCustom\"} type=\"submit\" label=\"submit\">Login</button>\n              </div>\n              \n            </form>\n          </div>\n      );\n  }\n}\n  \n\n export default reduxForm({ form: 'login' })(LoginForm);","export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP__FAIL';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN__FAIL';\nexport const USER_NOT_LOGGED= 'USER_NOT_LOGGED';\nexport const proxyURL = \"https://cors-anywhere.herokuapp.com/\";\nexport const requestURL = \"https://www.beenverified.com/hk/dd/email?email=\";","import { LOGIN_FAIL, LOGIN_SUCCESS, SIGNUP_FAIL, SIGNUP_SUCCESS, USER_NOT_LOGGED } from '../models/constants';\n\nexport const login = model => {\n  const storedUsers = JSON.parse(localStorage.getItem(\"users\"));\n  if (!storedUsers) return { type: LOGIN_FAIL };\n  let isLogged=false;\n  storedUsers.map( user => {\n    if(user.email === model.email && user.password === model.password){\n      isLogged=true;\n    }\n    return isLogged;\n  });\n\n  if (isLogged) {\n    localStorage.setItem(\"userLogged\", model.email);\n    return {type: LOGIN_SUCCESS, payload: model.email};\n  }\n  else {\n    return { type: LOGIN_FAIL };\n  }\n  };\n\n export const signUp = model => {\n\n  let storedUsers = JSON.parse(localStorage.getItem(\"users\"));\n  \n  if (!storedUsers) {\n    storedUsers = [];\n    storedUsers.push(model);\n    localStorage.setItem(\"users\", JSON.stringify(storedUsers));\n    return {type: SIGNUP_SUCCESS, payload: model};\n  };\n\n  let alreadyMember = false;\n  storedUsers.map(user => {\n    if(user.email === model.email){\n      alreadyMember = true;\n    }\n    return alreadyMember;\n  });\n\n  if (alreadyMember) \n    return { type: SIGNUP_FAIL };\n  else {\n    storedUsers.push(model);\n    localStorage.setItem(\"users\", JSON.stringify(storedUsers));\n    return {type: SIGNUP_SUCCESS, payload: model.email};\n  }\n }\n\n export const logout = () => {\n   localStorage.removeItem(\"userLogged\");\n   return {type: USER_NOT_LOGGED};\n}","export const userModel = {email: null, password: null};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport { login } from '../../actions';\nimport { userModel } from '../../models/user';\nimport { Redirect } from 'react-router-dom';\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          model: userModel,\n          isLogged: true,\n          redirect: false,\n        };\n    }\n\n    componentWillReceiveProps(nextProps){\n      if (nextProps.response.loginSuccess === true ) {\n        this.setState({redirect: true});\n        this.props.setUserLoggedEmail(true);\n        return;\n      }\n      this.setState({ isLogged: !this.state.isLogged });\n      return;\n    }\n\n    handleSubmit = () =>  {\n        this.props.login(this.state.model);\n    };\n   \n    render() {\n      const { redirect } = this.state;\n      if(redirect){\n        return <Redirect to='/reports'/>\n      }\n      return <LoginForm isLogged={this.state.isLogged} model={this.state.model}  handleSubmit={this.handleSubmit} />;\n    };\n  };\n\n\n  const mapStateToProps = state => {\n    return { \n        response: state.login,\n        }\n  }\n\n  const mapDispatchToProps = dispatch => {\n    return bindActionCreators({ login }, dispatch);\n  }\n  export default connect (mapStateToProps, mapDispatchToProps) (Login);","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport '../../styles/client.scss';\nimport { Link } from 'react-router-dom';\n\nclass SignUpForm extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      model: props.model\n    };\n  }\n\n  setValue = (event, newValue, previousValue, name) => {\n    let modelState = Object.assign({}, this.state);\n    modelState.model[name] = newValue;\n    this.setState(modelState);\n   };\n\n  render() {\n      const { handleSubmit, isSignUp } = this.props;\n      const model = this.state.model;\n      const error = isSignUp ? null : <center><label className={\"text-center\"}>Already Registered. Try Again</label></center>;\n\n      return (\n        <div className={\"login-form\"}>\n            <form href=\"#\" onSubmit={ (event)=> {event.preventDefault(); handleSubmit();}}>\n            <h2 className={\"text-center\"}> Sign Up</h2>\n            <p className={\"text-center\"}>It's free and only takes a minute.</p>\n            <hr/>\n              <Field\n                className={\"form-control\"}\n                value= {model.email}\n                name=\"email\"\n                component=\"input\"\n                type=\"text\"\n                placeholder=\"Username\"\n                onChange={this.setValue}\n              />\n              <Field\n                className={\"form-control\"}\n                value= {model.password}\n                name=\"password\"\n                component=\"input\"\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={this.setValue}\n              />\n              {error}\n              <div>\n                  <p style={{textAlign: \"center\"}}>Already a member? <Link to={'/login'}>Login.</Link></p>\n              </div>\n              <div>\n                <button className={\"buttonCustom\"} type=\"submit\" label=\"submit\">Create Account</button>\n              </div>\n              <p className=\"small text-center\">By clicking the Create Account, you agree to our <br/><a>Terms &amp; Conditions</a>, and <a>Privacy Policy</a></p>\n            </form>\n          </div>\n      );\n  }\n}\n  \n\n export default reduxForm({ form: 'signup' })(SignUpForm);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport SignUpForm from '../../components/SignupForm/SignupForm';\nimport { signUp } from '../../actions';\nimport { userModel } from '../../models/user';\nimport { Redirect } from 'react-router-dom';\n\nclass SignUp extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          model: userModel,\n          isSignUp: true,\n          redirect: false,\n        };\n    }\n\n    componentWillReceiveProps(nextProps){\n      if (nextProps.response.signUpSuccess === true ) {\n        this.setState({redirect: true});\n        return;\n      }\n\n      this.setState({ isSignUp: !this.state.isSignUp });\n      return;\n    }\n\n    handleSubmit = async () =>  {\n        await this.props.signUp(this.state.model);\n    };\n   \n    render() {\n      const { redirect } = this.state;\n      if (redirect){\n        return <Redirect to='/login'/>;\n      }\n      return <SignUpForm isSignUp={this.state.isSignUp} model={this.state.model}  handleSubmit={this.handleSubmit} />;\n    };\n  };\n\n\n  const mapStateToProps = state => {\n    return { \n        response: state.signUp, \n        }\n  }\n\n  const mapDispatchToProps = dispatch => {\n    return bindActionCreators({ signUp }, dispatch);\n  }\n  export default connect (mapStateToProps, mapDispatchToProps) (SignUp);","import React, { Component } from 'react';\nimport {Tab,Tabs, ListGroup, ListGroupItem, Panel} from 'react-bootstrap';\nimport '../../styles/reports.scss';\nimport uuid from 'uuid';\n\nexport default class Report extends Component {\n    \n    \n  render() {\n    const { reports } = this.props;\n    if (!reports) return null;\n\n    return (\n        <center>\n        <Panel bsStyle=\"info\" style={{ display:'inline-block' }}>\n            <Panel.Heading>\n            <Panel.Title componentClass=\"h3\" style={{textAlign: \"center\"}} >Report: {reports.emails[0].email_address}</Panel.Title>\n            </Panel.Heading>\n            <Panel.Body>\n                <center>\n                    <Tabs style={{ display:'inline-block' }} defaultActiveKey={1} id=\"tab\">\n                        <Tab eventKey={1} title=\"Names\">\n                        <ListGroup style={{textAlign:'center'}}>\n                            {reports.names &&  reports.names.map(name =><ListGroupItem key={uuid.v4()}>{name.full}</ListGroupItem>)}\n                        </ListGroup>\n                        </Tab>\n                        <Tab eventKey={2} title=\"Emails\">\n                        <ListGroup style={{textAlign:'center'}}>\n                            {reports.emails &&  reports.emails.map(email =><ListGroupItem key={uuid.v4()}>{email.email_address}</ListGroupItem>)}\n                        </ListGroup>\n                        </Tab>\n                        <Tab eventKey={3} title=\"Social\">\n                        <ListGroup style={{textAlign:'center'}}>\n                            {reports.social &&  reports.social.map((social, index) => social.type? <ListGroupItem key={uuid.v4()}><a style={{textTransform: \"capitalize\"}}href={ social.url }>{ social.type }</a></ListGroupItem> : null)}\n                        </ListGroup>\n                        </Tab>\n                        <Tab eventKey={4} title=\"Address\">\n                        <ListGroup style={{textAlign:'center'}}>\n                            {reports.addresses &&  reports.addresses.map(address =><ListGroupItem key={uuid.v4()}>{address.full}</ListGroupItem>)}\n                        </ListGroup>\n                        </Tab>\n                        <Tab eventKey={5} title=\"Jobs\">\n                        <ListGroup style={{textAlign:'center'}}>\n                            {reports.jobs &&  reports.jobs.map(job => job.title ? <ListGroupItem key={uuid.v4()}>{ job.title } at {job.company}</ListGroupItem> : <ListGroupItem key={uuid.v4()}>{job.company}</ListGroupItem> )}\n                        </ListGroup>\n                        </Tab>\n                        \n                        <Tab eventKey={6} title=\"Nicks\">\n                        <ListGroup style={{textAlign:'center'}}>\n                            {reports.usernames &&  reports.usernames.map(username =><ListGroupItem key={uuid.v4()}>{username}</ListGroupItem>)}  \n                        </ListGroup>\n                        </Tab>\n                    </Tabs>\n                </center>\n            </Panel.Body>\n        </Panel>\n        </center>\n    );\n  }\n}\n","import React, {Component} from 'react'\nimport App from '../../styles/reports.scss'\nimport Report from '../../components/Report/Report';\nimport uui from 'uuid';\nimport { ListGroup, Modal, Button } from 'react-bootstrap';\nimport MediaQuery from 'react-responsive';\nimport '../../styles/client.scss';\n\nclass Reports extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state ={\n      reports: null,\n      show: false,\n      reportInfo: null,\n      showModal: false,\n    }\n  }\n\n  async componentDidMount() {\n    await this.getReportsByUser();\n  }\n\n  getReportsByUser = async () => {\n    const reports = await JSON.parse(localStorage.getItem(\"reports\"));\n    const userLogged = localStorage.getItem(\"userLogged\");\n    let userReports = [];\n    if (reports) {\n      reports.map(storageReport => {\n        if (storageReport.user === userLogged) {\n          userReports.push(storageReport.report)\n        }\n        return userReports;\n      });\n      this.setState({ reports: userReports });\n    }\n  }\n\n  handleClick = report => {\n    this.setState({show: true, reportInfo: report, showModal: true});\n  }\n\n  render() {\n    const showReport = this.state.show?  \n    \n    (<div>\n      <MediaQuery query=\"(min-width: 765px)\">\n        <Report key={uui.v4()} reports={this.state.reportInfo}/>\n      </MediaQuery>\n      <MediaQuery query=\"(max-device-width: 765px)\">\n      <div className=\"static-modal\">\n          <Modal show={this.state.showModal}>\n            <Modal.Body><Report key={uui.v4()} reports={this.state.reportInfo}/></Modal.Body>\n\n            <Modal.Footer>\n              <Button onClick={()=> this.setState({showModal:false})}>Close</Button>\n            </Modal.Footer>\n          </Modal>\n        </div>;\n      </MediaQuery>  \n      </div>\n  )\n    : null;\n\n\n    return(\n        <div className={\"onCenter\"}>\n        <div className={App}> \n            <h2 className={\"text-center\"}>My Reports</h2>\n            <hr style={{width: \"95%\"}}/>\n            <center>\n            <ListGroup className=\"list-group col-sm-4\">\n            {this.state.reports && this.state.reports.map(report=>\n                <details key={uui.v4()}>\n                  <summary className={\"text-center\"} onClick={()=>this.handleClick(report)}>{report.emails && report.emails[0].email_address}</summary>\n                </details>\n                )}\n            </ListGroup>\n            </center>\n            {showReport}\n        </div>\n\n        </div>\n  )}\n}\n\nexport default Reports;","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport '../../styles/client.scss';\nimport App from '../../styles/reports.scss'\nimport Axios from 'axios';\nimport Report from '../../components/Report/Report';\nimport * as constants from '../../models/constants';\nimport MediaQuery from 'react-responsive';\nimport { Modal, Button } from 'react-bootstrap';\n\n\nclass Search extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      newEmailSearch: '',\n      loader: false,\n      report: null,\n      showModal: false,\n    };\n  }\n\n  setValue = (event, newValue, previousValue, name) => {\n    this.setState({newEmailSearch: newValue});\n   };\n\n   setAndSaveReport = report => {\n    let reportExists=false;\n    let reports = JSON.parse(localStorage.getItem(\"reports\"));\n    const userLogged = localStorage.getItem(\"userLogged\");\n    const fullReport = {user: userLogged, report: report};\n\n    if (!reports) {\n      reports = [];\n      reports.push(fullReport);\n      localStorage.setItem(\"reports\", JSON.stringify(reports));\n    }\n    else {\n      reports.map(storedReport => {\n        if (storedReport.user === userLogged) {\n          if (storedReport.report.emails[0].email_address === fullReport.report.emails[0].email_address) {\n            reportExists = true;\n          }\n        }\n        return reportExists;\n      });\n\n      if(!reportExists){\n        reports.push(fullReport);\n        localStorage.setItem(\"reports\", JSON.stringify(reports));\n      }\n    }\n   \n  };\n\n   handleSubmit = async () => {\n       this.setState({loader: true});\n       const {proxyURL, requestURL} = constants;\n       const email = this.state.newEmailSearch;\n       const searchresponse = await Axios.get(`${proxyURL}${requestURL}${email}`);\n       if (searchresponse) {\n          this.setState({loader: false, report: searchresponse.data, showModal: true});\n          this.setAndSaveReport(searchresponse.data);\n       }\n   }\n\n  render() {\n      const searchButton = this.state.loader ? null :  <button className={\"buttonCustom\"} type=\"submit\" label=\"submit\">Search</button>;\n      const loader = this.state.loader ?<center><i className=\"fa fa-spinner fa-spin\" style={{color: \"#3b5998\", fontSize: \"30px\"}}></i></center> : null;\n\n      return (\n        <div>\n          <div className={App}>\n            <h2 className={\"text-center\"}>New Search </h2>\n            <hr style={{width: \"75%\"}} />\n          </div>\n          <div className={\"login-form\"}>\n              <p className={\"text-center\"}>Looking to find out about someone?</p>\n              <form href=\"#\" onSubmit={ (event)=> {event.preventDefault(); this.handleSubmit();}}>\n                <Field\n                  className={\"form-control\"}\n                  value= {this.state.newEmailSearch}\n                  name=\"newEmailSearch\"\n                  component=\"input\"\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  onChange={this.setValue}\n                />\n                <div>\n                {loader}\n                {searchButton}\n                </div>\n              </form>\n            </div>\n           \n            {this.state.report && \n            <div className={App}> \n            <hr style={{width: \"75%\"}}/>\n            \n            <MediaQuery query=\"(min-width: 765px)\">\n              <div className={\"onCenter\"}>\n                <Report reports={this.state.report}/>\n              </div>\n            </MediaQuery>\n            <MediaQuery query=\"(max-device-width: 765px)\">\n            <div className=\"static-modal\">\n                <Modal show={this.state.showModal}>\n                  <Modal.Body><Report reports={this.state.report}/></Modal.Body>\n                  <Modal.Footer>\n                    <Button onClick={()=> this.setState({showModal:false})}>Close</Button>\n                  </Modal.Footer>\n                </Modal>\n              </div>;\n            </MediaQuery>  \n            \n            </div>\n            }\n          </div>\n      );\n  }\n}\n  \n\n export default reduxForm({ form: 'search' })(Search);","import React, {Component} from 'react'\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Login from '../Login/Login';\nimport SignUp from '../Signup/Signup';\nimport Reports from '../Reports/Reports';\nimport Search from '../Search/Search';\nimport Report from '../../components/Report/Report';\nimport {logout} from '../../actions';\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogged: true,\n      redirect: false,\n      userLoggedEmail: null,\n    }\n  }\n\n  componentWillReceiveProps(nextProps){\n    if (nextProps.response.isUserLogged === false ) {\n      this.setState({logout: true, userLoggedEmail: false});\n      return;\n    }\n  }\n\n  setUserLoggedEmail = (userLoggedStatus) => {\n    this.setState({userLoggedEmail: userLoggedStatus, logout: false});\n  }\n\n  logout = () => {\n    this.props.logout();\n  }\n\n   loginPage = () => {\n    return (\n      <Login setUserLoggedEmail={this.setUserLoggedEmail} />\n    );\n  }\n\n  render() {\n    const { userLoggedEmail } = this.state;\n    return(\n      <Router> \n        <div>\n        <Navbar fluid collapseOnSelect style={{zIndex: 2}}>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <a href=\"/\">React FE Test</a>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n          </Navbar.Header>\n          <Navbar.Collapse>\n            <Nav>\n            {userLoggedEmail &&\n             <LinkContainer to=\"/reports\">\n               <NavItem eventKey={1} href=\"#\">Reports</NavItem>\n             </LinkContainer>\n             }\n             {userLoggedEmail &&\n             <LinkContainer to=\"/search\">\n               <NavItem eventKey={2} href=\"#\">New Search</NavItem>\n             </LinkContainer>\n             }\n             </Nav>\n            <Nav pullRight>\n              {userLoggedEmail &&\n              <LinkContainer to=\"/login\">\n                <NavItem eventKey={1} href=\"#\" onClick={this.logout}> Logout</NavItem>\n              </LinkContainer>}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <div>\n          <Switch>\n            <Route path=\"/login\" render={this.loginPage}/>\n            <Route path=\"/sign-up\" component={SignUp}/>\n            <Route path=\"/reports\" component={Reports}/>\n            <Route path=\"/search\" component = {Search}/>\n            <Route path=\"/report\" component ={Report}/>\n            <Redirect from='*' to='/login'/>\n          </Switch>\n        </div>\n        </div>\n    </Router>\n  )}\n}\n\nconst mapStateToProps = state => {\n  return {\n      response: state.userLogout,\n      }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ logout }, dispatch);\n}\nexport default connect (mapStateToProps, mapDispatchToProps) (Header);","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './App.css';\nimport Header from './containers/Header/Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Header />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {LOGIN_SUCCESS, LOGIN_FAIL} from '../models/constants';\n\nexport default (state = {}, action = {}) => {\n  switch (action.type) {\n    case LOGIN_SUCCESS: \n      return { loginSuccess: true, response: action.payload};\n    case LOGIN_FAIL: {\n      return { loginSuccess: false};\n    }\n    default:\n      return state;\n  }\n};\n\n","import { combineReducers } from 'redux';\nimport Login from './login';\nimport SignUp from './signup';\nimport UserLogged from './userLogged';\nimport {reducer as formReducer} from 'redux-form';\n\nconst rootReducer = combineReducers({\n    login: Login,\n    signUp: SignUp,\n    form: formReducer,\n    userLogout: UserLogged,\n});\n\nexport default rootReducer;\n","import {SIGNUP_FAIL, SIGNUP_SUCCESS} from '../models/constants';\n\nexport default (state = {}, action = {}) => {\n  switch (action.type) {\n    case SIGNUP_SUCCESS: \n        return { signUpSuccess: true, response: action.payload};\n    case SIGNUP_FAIL: {\n        return { signUpSuccess: false};\n    }\n    default:\n      return state;\n  }\n};\n","import { USER_NOT_LOGGED } from '../models/constants';\n\nexport default (state = {}, action = {}) => {\n  switch (action.type) {\n    case USER_NOT_LOGGED: {\n      return { isUserLogged: false};\n    }\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware()(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(reducers)}>\n    <App key={`key-${Date.now()}`} />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}